<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<!-- 현재 로그인한 주체를 Controller에서 얻기 위해 설정해야 할 정보 -->
		<argument-resolvers>
			<beans:bean
				class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver">
			</beans:bean>
		</argument-resolvers>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resource/**" location="/resource/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"></beans:property>
	</beans:bean>

	<!-- Apache Tiles dependecy -->
	<beans:bean
		class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		 <beans:property name="definitions" value="/WEB-INF/views/tiles3.xml"/>
	<!-- 	<beans:property name="definitions">
			<beans:list>
				<beans:value>WEB-INF/views/tiles3.xml</beans:value>
			</beans:list>
		</beans:property> -->
	</beans:bean>
	<!-- Apache Tiles dependecy -->

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>

	<beans:bean id="boardUploadPath" class="java.lang.String">
		<beans:constructor-arg value="resource\imagesPhoto\"></beans:constructor-arg>
	</beans:bean>


	<context:component-scan base-package="org.study.web" />
	<context:component-scan base-package="org.meeting.dao" />
	<context:component-scan base-package="org.meeting.service" />


</beans:beans>
